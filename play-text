# https://docs.microsoft.com/en-us/dotnet/api/system.speech.synthesis.speechsynthesizer.rate?view=netframework-4.8

function error_log_write($err_msg) {
    if ( -not ( Test-Path $env:TEMP\errorlog.txt ) ) {
        New-Item $env:TEMP\errorlog.txt
    }
    Out-File -FilePath $env:TEMP\errorlog.txt -Append -InputObject $err_msg
}

function Play-Text {
<#
.SYNOPSIS
Make the computer talk.

.DESCRIPTION
Makes that computer clap on command!

.PARAMETER say
Type the text to be played by Speech Synthesis.

.EXAMPLE
Play-Text -say "Hello"
Plays string using the default Windows voice.
.EXAMPLE
Play-Text -say "hello there" -computer hoth
Plays string using the default Windows voice on a remote computer. Can also use hostname, host, or computername as an alias for computer.
#>
[CmdletBinding(SupportsShouldProcess)]
param(

[Parameter (Mandatory = $true, Position=0)]
[string[]] $say,

[Parameter ( )]
[alias('hostname','computername','host')]
[ValidateLength(1,15)]
[string] $computer = 'localhost',

[Parameter (Mandatory = $false )]
[ValidateRange(1,10)]
[int] $rate = 1,

[Parameter ()]
[switch] $ErrorLog,

[Parameter ()]
[String] $Errors
)

Begin {

}

Process {
    # This will show a verbose statement indicating what computer is about to be controlled.
    if ( $PSCmdlet.ShouldProcess("$computer","Invoke-Command") ) { }

    # This allows us to use the Speech.Synthesis on remote computers.
    Invoke-Command -ComputerName $computer -ScriptBlock {
        try {
            Add-Type -AssemblyName System.Speech -ErrorAction Stop -ErrorVariable EV
            $voiceEngine = New-Object System.Speech.Synthesis.SpeechSynthesizer -ErrorAction Stop -ErrorVariable EV
            $voiceEngine.Rate = $using:rate
            # $voiceEngine.Volume 
            # $voiceEngine.Voice
        
            $voiceEngine.Speak($using:say)
        }
        catch {
            Write-Host " Error in the try block. " -ForegroundColor Blue -BackgroundColor Gray
            if ( $ErrorLog ) {
                Get-Date | Out-File $LogFile -Force
                $computer | Out-File $LogFile -Append
                $EV | Out-File $LogFile -Append
            }
        }
        finally {
            $voiceEngine.Dispose()
        }
    }
}

End {

}

}
